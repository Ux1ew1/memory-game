// your code
const EMOJIS = ["ü•î", "üçí", "ü•ë", "üåΩ", "ü•ï", "üçá", "üçâ", "üçå", "ü•≠", "üçç"];

function shuffleAndSortedCards(cards) {
  // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ 16 –∫–∞—Ä—Ç–æ—á–µ–∫
  if (cards && Array.isArray(cards)) {
    // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const sortedArr = cards.sort(() => Math.random(cards) - 0.5);
    // –¥–æ—Å—Ç–∞—ë–º –∏–∑ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤—ã–µ 8
    const dublicateArr = [...sortedArr].slice(0, 8);
    // –¥—É–±–ª–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 8 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const doubleArr = [...dublicateArr, ...dublicateArr];
    // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –∏–∑ 16 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const sortedDoubleArr = doubleArr.sort(() => Math.random(doubleArr) - 0.5);
    return sortedDoubleArr;
  } else {
    console.error("–ü–µ—Ä–µ–¥–∞–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞");
  }
}

let flippedCard = []; // –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
const flipCard = (card) => {
  // —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
  card.classList.toggle("flipped"); // —Ç–æ–≥–ª–∏–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
  flippedCard.push(card); // –ø—É—à–∏–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –º–∞—Å—Å–∏–≤
  const flippedCardState = STATE.flippedCards++ + 1; // –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ + 1 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
  console.log(flippedCardState);
  if (flippedCardState === 2) {
    checkCards(flippedCard); // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –ø–µ—Ä–µ–¥–∞—ë–º —Ç—É–¥–∞ –º–∞—Å—Å–∏–≤
  }
};

const closeCard = (item) => {
  // —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
  item.classList.toggle("flipped");
};

const checkCards = (items) => {
  // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫. –ü–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ flippedCard
  console.log(items);
  // const flippedCardState = STATE.flippedCards++ + 1; // –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ + 1 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
  if (items[0].innerText !== items[1].innerText) {
    // –µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Ä–∞–≤–Ω—ã
    items.forEach((card) => {
      // –∏—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º –∏–∑ –º—ã—Å—Å–∏–≤–∞
      setTimeout(() => {
        closeCard(card); // —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–≤–∞—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
      }, 1000);
    });
  }
  STATE.flippedCards = 0; // –æ—á–∏—â–∞–µ–º State
  flippedCard = []; // –æ—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤
};

const STATE = {
  isGameStarted: false, // –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –∏–ª–∏ –Ω–µ—Ç
  totalTime: 0, // –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ
  flippedCards: 0, // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  totalFlips: 0, // –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
};

const SELECTORS = {
  boardContainer: document.querySelector(".board-container"), // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
  board: document.querySelector(".board"), // –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—è
  moves: document.querySelector(".moves"), // –∫–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á—ë—Ç–∞ —à–∞–≥–æ–≤
  timer: document.querySelector(".timer"), // –∫–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
  start: document.querySelector("button"), // –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
};

// –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
const generateGame = () => {
  // –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç–∞ –∞—Ç—Ä–∏–±—É—Ç–∞
  const dimensions = SELECTORS.board.dataset.dimension;
  if (dimensions % 2 !== 0) {
    throw new Error("–†–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á—ë—Ç–Ω—ã–º");
  }

  // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —ç–º–æ–¥–∑–∏
  const shuffleEmoji = shuffleAndSortedCards(EMOJIS);
  console.log([...EMOJIS].length);
  // –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º
  const cardsHTML = shuffleEmoji
    .map((emoji) => {
      return `<div class="card">
      <div class="card-front"></div>
      <div class="card-back">${emoji}</div>
      </div>`;
    })
    .join("");

  // –≤—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
  SELECTORS.board.insertAdjacentHTML("beforeend", cardsHTML);
  // console.log(cardsHTML);
};

generateGame();

const attachListeners = () => {
  // –ø–æ–ª—É—á–µ–Ω–∏–µ HTMLCollection front –∫–∞—Ä—Ç–æ—á–µ–∫
  const cards = SELECTORS.board.children[0];

  // –ø–æ–ª—É—á–µ–Ω–∏–µ HTMLCollection —Ä–æ–¥–∏—Ç–µ–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
  const cardsParent = SELECTORS.board.children;
  if (cardsParent) {
    // HTMLCollection –≤ –º–∞—Å—Å–∏–≤
    [...cardsParent].forEach((card) => {
      card.addEventListener("click", (event) => {
        if (event.target.classList.contains("card")) {
        }
        flipCard(event.target.parentElement); // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–∞—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
        // console.log(event.target.parentElement);
      });
    });
  }
};

// –≤—ã–∑–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", attachListeners);
